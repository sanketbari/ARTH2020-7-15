from os import system
from os import remove 

#system("while sleep 1;do tput sc;tput cup 0 $(($(tput cols)-28));echo -e \"\e[1;32m`date +%d\" \"%b\", \"%Y\" \"%a\" \"%r`\e[39m\";tput rc;done &")

f = open('livedate', 'w')
f.write("while sleep 1;do tput sc;tput cup 0 $(($(tput cols)-28));echo -e \"\e[1;32m`date +%d\" \"%b\", \"%Y\" \"%a\" \"%r`\e[39m\";tput rc;done &")  
# python will convert \n to os.linesep
f.close() 


#live_time_corner = "while : ; do echo -n -e \"`date +%T``sleep 1`\b\b\b\b\b\b\b\b\"; done &"
system("bash livedate")

def normal_colours():
	system("tput bold")
	system("tput setaf 7")
	system("tput setab 16")
	
global in1
in1 = 0

normal_colours()
system("clear")

def menu():
	global in1
	if(in1==0):

		in1 = 1
	else:
		a = input("\n\tpress enter to view menu.....  ")

	system("clear")
	system("tput setaf 12")
	print("""
	 *******************""", end = "")
	system("tput setaf 11") 
	print(""" Welcome """, end = "")
	system("tput setaf 12")
	print("""*********************""")
	normal_colours()
 
	print("""

	Enter your choice :
	\t1.  Open project developer's LinkedIn profile :D
	\t2.  Open google.com
	\t3.  Speak whatever I will type
	\t4.  Check if this computer is connected to internet or not
	\t5.  Show calander of previous, current and next month
	\t6.  Open new terminal
	\t7.  Who is the current user ?
	\t8.  View all the current running process
	\t9.  Create user by entering unique username and password
	\t10. Delete existing user
	\t11. File handling(.txt file)
	\t12. Show me DOCKER OPTIONS
	\t13. EXIT\nEnter your choice : """, end = "")
	if(in1 == 1):
		system("espeak-ng  \"heyy hi\"")
		in1 = 2
	try:
		ch = int(input())
	except:
		ch=100

	return ch


def menu2():
	system("clear")
	print("""\n\n\n\n
		1. Insert into file
		2. Read file
		3. Delete file if exists
		4. Copy existing file to another new file
		5. Read 2 files (it will print 2 files together)
		6. EXIT
	
	Enter your choice : """, end = "")
	try:		
		ch1=int(input())	
	except:
		ch1=100
	return ch1


def menu3():
	system("clear")
	print("""\n\n\n\n
		1. Start Docker
		2. List Docker Images
		3. List Docker Containers
		4. Search Docker Image
		5. Pull Image
		6. Launch Container
		7. Inspect docker Container
		8. Execute command in the running container
		9. Stop Docker Container
                10. Stop Docker
		11. EXIT
	
	Enter your choice : """, end = "")
	try:		
		ch2=int(input())	
	except:
		ch2=100
	return ch2


ch = menu()
system("clear")
print("\n\n")
while ch!=13:
	system("clear")
	if ch == 1:
		from webbrowser import open_new_tab
		open_new_tab("https://www.linkedin.com/in/sanket-bari-061951b9/")
	elif ch == 2:
		from webbrowser import open_new_tab
		open_new_tab("https://www.google.com")
	elif ch == 3:
		print("Enter string you want machine to speak : ", end = "")
		v1 = input()
		v2 = "\""+v1+"\""
		system("espeak-ng  "+v2)
	elif ch == 4:
		import urllib.request
		try :
		    print("\n\tWait few seconds....")
		    stri = "https://www.google.co.in"
		    data = urllib.request.urlopen(stri)
		    print("\n\tConnected")
		except:
		    print ("\n\tNot Connected") 
	elif ch == 5:
		print("\n\t\t")
		system("cal -3")
		print("\n\n")
	elif ch == 6:
		system("gnome-terminal")
		system("clear")
	elif ch == 7:
		print("\n\n\t\tCurrent user is : ",end  = "")
		system("whoami")
	elif ch == 8:
		system("ps -aux")
	elif ch == 9:
		try:
			print("\n\nEnter username : ",end = "" )
			nm = input()
			system("useradd "+nm)
			print("\n\n")
			system("passwd "+nm)
			print("\n\nAccount created successfully....")
		except:
			pass
	elif ch == 10:
		try:
			print("\n\n\tEnter username you want to delete : ", end = "")
			nm1 = input()
			system("userdel --remove "+nm1)
			print("\n\n")
		except:
			pass

	elif ch == 11:
		ch1 = menu2()
		while ch1 != 6:
			if(ch1 == 100):
				print("\n\n\t\tIncorrect choice... try again...")
				from time import sleep
				sleep(1)
				
				
			
			elif(ch1 == 1):
				system("clear")
				print("\n\n\n\tEnter file name in which you want to insert data\n\n\t\teg. file1\n\n Enter file name : ",end = "")
				filenm = input()
				if(filenm != ""):
					system("gedit "+ filenm + ".txt")
			elif(ch1 == 2):
				system("clear")
				print("\n\n\n\tEnter file name which you want to edit\n\n\t\teg. file1\n\n Enter file name : ",end = "")
				filenm = input()
				if(filenm != ""):
					system("cat "+ filenm + ".txt")
				print("\n\n\tPress enter key to continue... ")
				c = input()
			elif(ch1 == 3):
				system("clear")
				print("\n\n\n\tEnter file name which you want to delete : ",end = "")
				filenm = input()
				if(filenm != ""):
					system("rm "+ filenm + ".txt")
				print("\n\n\tPress enter key to continue... ")
				c = input()
			elif(ch1 == 4):
				system("clear")
				print("\n\n\n\tEnter existing file name : ",end = "")
				aaa = input()
				if(aaa!= ""):
					print("\n\tEnter file name in which you want to copy : ", end = "")
					bbb = input()
					if(bbb!=""):
						system("cat < "+ aaa + ".txt"+" > "+bbb+".txt")
	
			elif(ch1 == 5):
				system("clear")
				
				print("\n\n\n\tFollowing operaton will happen\n\n\t\tf1 + f2 will be printed\n\n\tEnter first file name : ",end = "")
				aaa = input()
				if(aaa!= ""):
					print("\n\tEnter second file name : ", end = "")
					bbb = input()
					if(bbb != ""):
						system("cat  "+ aaa + ".txt"+" "+bbb+".txt")	
				print("\n\n\tPress enter key to continue... ")
				c = input()
			ch1 = menu2()
	elif ch == 12:
		ch2 = menu3()
		while(ch2!=11):
			if(ch2 == 100):
				print("\n\n\t\tIncorrect choice... try again...")
				from time import sleep
				sleep(1)

			elif(ch2 == 1):
				system("clear")
				x = system("systemctl start docker")
				if(x == 0):
					print("Docker started successfully")
					from time import sleep
					sleep(5)
					system("clear")
					print("\n\n\tPress enter key to continue... ")
					c = input()

			elif(ch2 == 2):
				system("clear")
				x = system("docker images")
				print("\n\n\tPress enter key to continue... ")
				c = input()

			elif(ch2 == 3):
				system("clear")
				system("docker ps")
				print("\n\n\tPress enter key to continue... ")
				c = input()

			elif(ch2 == 4):
				system("clear")
				x = input("Enter the name of image to be searched...")
				print(x)
				y = "docker search " + x
				system(y)
				print("\n\n\tPress enter key to continue... ")
				c = input()

			elif(ch2 == 5):
				system("clear")
				x = input("Enter name of the image to be pulled from docker repo,,,")
				y = "docker pull" + x
				system(y)
				print("\n\n\tPress enter key to continue... ")
				c = input()

			elif(ch2 == 6):
				system("clear")
				x = input("Enter the image name... ")
				y = input("Enter the name you want to give to the container...")
				z = "docker container run -td --name" + " " + y + " " + x
				system(z)
				
				print("\n\n\tPress enter key to continue... ")
				c = input()

			elif(ch2 == 7):
				system("clear")
				x = input("Enter the container name to be inspected... ")
				y = "docker inspect " + x
				system(y)
				from time import sleep
				sleep(5)
				print("\n\n\tPress enter key to continue... ")
				
			elif(ch2 == 8):
				system("clear")
				x = input("Enter the container name in which You want to execute the command.../t")
				y = input("Enter the command to be executed...")
				z = "docker container exec " + x + " "+ y
				system(z)
				from time import sleep
				sleep(5)
				print("\n\n\tPress enter key to continue... ")
			
			elif(ch2 == 9):
				system("clear")
				x = input("Enter container name to be stopped....")
				y = "docker stop " + x
				system(y)
				print("\n\n\tPress enter key to continue... ")	

			elif(ch2 == 10):
				system("clear")
				x = system("systemctl stop docker")
				if x == 0:
					print("Docker stopped successfully...")
					from time import sleep
					sleep(5)			
			ch2 = menu3()						
	else:
		print("\n\n\tIncorrect choice... ")	

		
	ch = menu()

system("tput setaf 11") 
print("\n\t----- Thank You -----\n\n")
normal_colours()
system("espeak-ng  \"thaank you!\"")
system("killall bash livedate") 
remove("livedate")
system("clear")
